TEST_CASE "FB_WarehouseManagement"

PROPERTY
AUTHOR : ""
VERSION : "0.1"
COMMENT : ""
SCOPE : "PLC_3"
PLCSIM_INSTANCE_NAME : "FB_WarehouseManagement"
TEST_EXECUTION_MODE : "SystemManagedPlcSimAdvInstance"
END_PROPERTY

VAR
requestIn:"FB_WarehouseManagement_DBG".requestIn;
requestOut:"FB_WarehouseManagement_DBG".requestOut;
productNum:"FB_WarehouseManagement_DBG".productNum;
libFreeNum:"FB_WarehouseManagement_DBG".libFreeNum;
error:"FB_WarehouseManagement_DBG".error;
status:"FB_WarehouseManagement_DBG".status;

library1:"FB_WarehouseManagement_DBG".library[1];
library2:"FB_WarehouseManagement_DBG".library[2];
library3:"FB_WarehouseManagement_DBG".library[3];
library4:"FB_WarehouseManagement_DBG".library[4];
library5:"FB_WarehouseManagement_DBG".library[5];
library6:"FB_WarehouseManagement_DBG".library[6];
library7:"FB_WarehouseManagement_DBG".library[7];
library8:"FB_WarehouseManagement_DBG".library[8];
library9:"FB_WarehouseManagement_DBG".library[9];

END_VAR

STEP: "Step 1"
requestIn:=0;
requestOut:=1;
RUN(CYCLES:=1);
ASSERT.Equal(productNum,0);
ASSERT.Equal(libFreeNum,9);
ASSERT.Equal(error,1);
ASSERT.Equal(status,16#8002);

ASSERT.Equal(library1,0);
ASSERT.Equal(library2,0);
ASSERT.Equal(library3,0);
ASSERT.Equal(library4,0);
ASSERT.Equal(library5,0);
ASSERT.Equal(library6,0);
ASSERT.Equal(library7,0);
ASSERT.Equal(library8,0);
ASSERT.Equal(library9,0);

END_STEP

STEP: "Step 2"
requestIn:=1;
requestOut:=0;
RUN(CYCLES:=1);
ASSERT.Equal(productNum,1);
ASSERT.Equal(libFreeNum,8);
ASSERT.Equal(error,0);
ASSERT.Equal(status,0);

ASSERT.Equal(library1,0);
ASSERT.Equal(library2,0);
ASSERT.Equal(library3,0);
ASSERT.Equal(library4,0);
ASSERT.Equal(library5,0);
ASSERT.Equal(library6,0);
ASSERT.Equal(library7,0);
ASSERT.Equal(library8,0);
ASSERT.Equal(library9,1);

END_STEP

STEP: "Step 3"


library1:=0;
library2:=0;
library3:=1;
library4:=0;
library5:=0;
library6:=1;
library7:=0;
library8:=1;
library9:=1;

requestIn:=1;
requestOut:=0;

RUN(CYCLES:=1);
ASSERT.Equal(productNum,5);
ASSERT.Equal(libFreeNum,4);
ASSERT.Equal(error,0);
ASSERT.Equal(status,0);

ASSERT.Equal(library1,0);
ASSERT.Equal(library2,0);
ASSERT.Equal(library3,1);
ASSERT.Equal(library4,0);
ASSERT.Equal(library5,0);
ASSERT.Equal(library6,1);
ASSERT.Equal(library7,1);
ASSERT.Equal(library8,1);
ASSERT.Equal(library9,1);

END_STEP

STEP: "Step 4"
requestIn:=0;
requestOut:=1;

RUN(CYCLES:=1);
ASSERT.Equal(productNum,4);
ASSERT.Equal(libFreeNum,5);
ASSERT.Equal(error,0);
ASSERT.Equal(status,0);

ASSERT.Equal(library1,0);
ASSERT.Equal(library2,0);
ASSERT.Equal(library3,0);
ASSERT.Equal(library4,0);
ASSERT.Equal(library5,0);
ASSERT.Equal(library6,1);
ASSERT.Equal(library7,1);
ASSERT.Equal(library8,1);
ASSERT.Equal(library9,1);

END_STEP

STEP: "Step 5"
requestIn:=1;
requestOut:=0;

library1:=1;
library2:=1;
library3:=1;
library4:=1;
library5:=1;
library6:=1;
library7:=1;
library8:=1;
library9:=1;

RUN(CYCLES:=1);
ASSERT.Equal(productNum,9);
ASSERT.Equal(libFreeNum,0);
ASSERT.Equal(error,1);
ASSERT.Equal(status,16#8001);

ASSERT.Equal(library1,1);
ASSERT.Equal(library2,1);
ASSERT.Equal(library3,1);
ASSERT.Equal(library4,1);
ASSERT.Equal(library5,1);
ASSERT.Equal(library6,1);
ASSERT.Equal(library7,1);
ASSERT.Equal(library8,1);
ASSERT.Equal(library9,1);

END_STEP


END_TEST_CASE

